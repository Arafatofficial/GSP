--------------------------------------------------------------------------------------------------------------------------------------------------------------------

----->>>TASK 1:

git clone https://github.com/googlecodelabs/monolith-to-microservices.git

cd ~/monolith-to-microservices
./setup.sh

cd ~/monolith-to-microservices/monolith
npm start

gcloud services enable cloudbuild.googleapis.com
gcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/Image_name:1.0.0 .


-----------------------------------------------------------------------------------------------------------------------------------------------------------------

----->>>TASK 2:

gcloud config set compute/zone us-central1-a
gcloud services enable container.googleapis.com
gcloud container clusters create Cluster_name --num-nodes 3

kubectl create deployment Image_name --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/Image_name:1.0.0
kubectl expose deployment Image_name --type=LoadBalancer --port 80 --target-port 8080



------------------------------------------------------------------------------------------------------------------------------------------------------------------

------>>>TASK 3:

cd ~/monolith-to-microservices/microservices/src/orders
gcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/Orders_Identifier:1.0.0 .

cd ~/monolith-to-microservices/microservices/src/products
gcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/Products_Identifier:1.0.0 .



------------------------------------------------------------------------------------------------------------------------------------------------------------------

------>>>TASK 4:

kubectl create deployment Orders_Identifier --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/Orders_Identifier:1.0.0
kubectl expose deployment Orders_Identifier --type=LoadBalancer --port 80 --target-port 8081

kubectl create deployment Products_Identifier --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/Products_Identifier:1.0.0
kubectl expose deployment Products_Identifier --type=LoadBalancer --port 80 --target-port 8082



------------------------------------------------------------------------------------------------------------------------------------------------------------------

----->>>>TASK 5:

cd ~/monolith-to-microservices/react-app
nano .env



----------------------------------------------------------------------------------------------------------------------------------------------------------------

----->>>>TASK 6:

cd ~/monolith-to-microservices/microservices/src/frontend
gcloud builds submit --tag gcr.io/${GOOGLE_CLOUD_PROJECT}/Frontend_Identifier:1.0.0 .


-----------------------------------------------------------------------------------------------------------------------------------------------------------------

----->>>TASK 7:

kubectl create deployment Frontend_Identifier --image=gcr.io/${GOOGLE_CLOUD_PROJECT}/Frontend_Identifier:1.0.0

kubectl expose deployment Frontend_Identifier --type=LoadBalancer --port 80 --target-port 8080



------------------------------------------------------------------------------------------------------------------------------------------------------------------

          Congratulations, you're all done with the lab ðŸ˜„                           Don't forget to subscribe our YouTube ChannelðŸ˜„
                                        
                                                                 Thank You!!!!
-------------------------------------------------------------------------------------------------------------------------------------------------------------------



