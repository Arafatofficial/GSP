---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



# install the pglogical database extension and jquery

sudo apt -y install postgresql-13-pglogical jq

In the terminal in the new browser window, update the PostgreSQL configuration files

# Download and apply some additions to the PostgreSQL configuration files (to enable pglogical extension)

sudo su - postgres -c "gsutil cp gs://cloud-training/gsp355/pg_hba_append.conf ."
sudo su - postgres -c "gsutil cp gs://cloud-training/gsp355/postgresql_append.conf ."
sudo su - postgres -c "cat pg_hba_append.conf >> /etc/postgresql/13/main/pg_hba.conf"
sudo su - postgres -c "cat postgresql_append.conf >> /etc/postgresql/13/main/postgresql.conf"
sudo systemctl restart postgresql@13-main




# Apply required privileges to postgres and orders databases

sudo -E su - postgres
psql


\c postgres;
CREATE EXTENSION pglogical;
\c orders;
CREATE EXTENSION pglogical;



CREATE USER :username PASSWORD 'DMS_1s_cool!';
ALTER DATABASE orders OWNER TO :username;
ALTER ROLE :username WITH REPLICATION;


c orders;
SELECT column_name FROM information_schema.columns WHERE table_name = 'inventory_items' AND column_name = 'id';
ALTER TABLE inventory_items ADD PRIMARY KEY (id);





\c postgres;

GRANT USAGE ON SCHEMA pglogical TO :username;
GRANT ALL ON SCHEMA pglogical TO :username;

GRANT SELECT ON pglogical.tables TO :username;
GRANT SELECT ON pglogical.depend TO :username;
GRANT SELECT ON pglogical.local_node TO :username;
GRANT SELECT ON pglogical.local_sync_status TO :username;
GRANT SELECT ON pglogical.node TO :username;
GRANT SELECT ON pglogical.node_interface TO :username;
GRANT SELECT ON pglogical.queue TO :username;
GRANT SELECT ON pglogical.replication_set TO :username;
GRANT SELECT ON pglogical.replication_set_seq TO :username;
GRANT SELECT ON pglogical.replication_set_table TO :username;
GRANT SELECT ON pglogical.sequence_state TO :username;
GRANT SELECT ON pglogical.subscription TO :username;

\c orders;

GRANT USAGE ON SCHEMA pglogical TO :username;
GRANT ALL ON SCHEMA pglogical TO :username;

GRANT SELECT ON pglogical.tables TO :username;
GRANT SELECT ON pglogical.depend TO :username;
GRANT SELECT ON pglogical.local_node TO :username;
GRANT SELECT ON pglogical.local_sync_status TO :username;
GRANT SELECT ON pglogical.node TO :username;
GRANT SELECT ON pglogical.node_interface TO :username;
GRANT SELECT ON pglogical.queue TO :username;
GRANT SELECT ON pglogical.replication_set TO :username;
GRANT SELECT ON pglogical.replication_set_seq TO :username;
GRANT SELECT ON pglogical.replication_set_table TO :username;
GRANT SELECT ON pglogical.sequence_state TO :username;
GRANT SELECT ON pglogical.subscription TO :username;

GRANT USAGE ON SCHEMA public TO :username;
GRANT ALL ON SCHEMA public TO :username;

GRANT SELECT ON public.distribution_centers TO :username;
GRANT SELECT ON public.inventory_items TO :username;
GRANT SELECT ON public.order_items TO :username;
GRANT SELECT ON public.products TO :username;
GRANT SELECT ON public.users TO :username;

ALTER TABLE public.distribution_centers OWNER TO :username;
ALTER TABLE public.inventory_items OWNER TO :username;
ALTER TABLE public.order_items OWNER TO :username;
ALTER TABLE public.products OWNER TO :username;
ALTER TABLE public.users OWNER TO :username;


\q
exit


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# Task 3. Implement Cloud SQL for PostgreSQL IAM database authentication


Asking For a password enter supersecret!


\c orders;


Asking For a password enter supersecret!


GRANT ALL PRIVILEGES ON TABLE <Table Name> TO "<Username>";


\q


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# Task 4. Configure and test point-in-time recovery


date --rfc-3339=seconds


Asking For a password enter supersecret!


\c orders;


Asking For a password enter supersecret!


INSERT INTO distribution_centers VALUES(-80.1918,25.7617,'Miami FL',11);


\q


gcloud auth login


gcloud projects get-iam-policy PROJECT_ID


gcloud sql instances clone INSTANCE_ID  postgres-orders-pitr --point-in-time 'TIMESTAMP'



---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                      Congratulations, you're all done with the lab ðŸ˜„Don't forget to subscribe our YouTube ChannelðŸ˜„

                                                      Thanks for watching.!!!!
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
